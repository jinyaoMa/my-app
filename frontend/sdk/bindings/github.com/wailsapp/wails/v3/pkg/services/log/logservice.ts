// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

/**
 * DebugContext logs at level [Debug].
 */
function DebugContext(message: string, ...args: any[]): $CancellablePromise<void> {
    return $Call.ByID(2172267022, message, args);
}

/**
 * ErrorContext logs at level [Error].
 */
function ErrorContext(message: string, ...args: any[]): $CancellablePromise<void> {
    return $Call.ByID(448923089, message, args);
}

/**
 * InfoContext logs at level [Info].
 */
function InfoContext(message: string, ...args: any[]): $CancellablePromise<void> {
    return $Call.ByID(3505147743, message, args);
}

/**
 * Log emits a log record with the current time and the given level and message.
 * The Record's attributes consist of the Logger's attributes followed by
 * the attributes specified by args.
 * 
 * The attribute arguments are processed as follows:
 *   - If an argument is a string and this is not the last argument,
 *     the following argument is treated as the value and the two are combined
 *     into an attribute.
 *   - Otherwise, the argument is treated as a value with key "!BADKEY".
 * 
 * Log feeds the binding call context into the configured logger,
 * so custom handlers may access context values, e.g. the current window.
 */
export function Log(level: $models.Level, message: string, ...args: any[]): $CancellablePromise<void> {
    return $Call.ByID(2737579682, level, message, args);
}

/**
 * LogLevel returns the currently configured log level,
 * that is either the one configured initially
 * or the last value passed to [Service.SetLogLevel].
 */
export function LogLevel(): $CancellablePromise<$models.Level> {
    return $Call.ByID(2522652144);
}

/**
 * SetLogLevel changes the current log level.
 */
export function SetLogLevel(level: $models.Level): $CancellablePromise<void> {
    return $Call.ByID(3688350912, level);
}

/**
 * WarningContext logs at level [Warn].
 */
function WarningContext(message: string, ...args: any[]): $CancellablePromise<void> {
    return $Call.ByID(4057902959, message, args);
}

export {
    DebugContext as Debug,
    InfoContext as Info,
    WarningContext as Warning,
    ErrorContext as Error,
};
